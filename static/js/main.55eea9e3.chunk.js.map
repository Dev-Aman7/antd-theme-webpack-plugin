{"version":3,"sources":["Responsive.js","Navbar/index.js","ColorPicker.js","App.js","serviceWorker.js","index.js"],"names":["Mobile","props","maxWidth","Default","minWidth","Header","Navbar","useState","visible","setVisible","menu","theme","mode","defaultSelectedKeys","style","lineHeight","Item","key","className","type","size","onClick","title","placement","closable","onClose","noop","pickers","chrome","ChromePicker","sketch","SketchPicker","ColorPicker","handleClick","setState","displayColorPicker","state","handleClose","handleChange","color","hex","onChange","handleChangeComplete","onChangeComplete","nextProps","this","small","position","Picker","styles","width","height","borderRadius","background","swatch","padding","boxShadow","display","cursor","popover","zIndex","cover","top","right","bottom","left","wrapper","transform","paddingBottom","picker","Component","defaultProps","Footer","Content","Sider","FormItem","Option","RadioButton","Button","RadioGroup","Group","App","handleSubmit","e","preventDefault","form","validateFields","err","values","console","log","normFile","Array","isArray","fileList","varName","vars","handleColorChange","varname","window","less","modifyVars","then","localStorage","setItem","JSON","stringify","catch","error","message","getColorPicker","xs","presetColors","resetTheme","initialValue","onCollapse","collapsed","lightVars","getItem","Object","assign","parse","colorPickers","map","index","formItemLayout","labelCol","span","wrapperCol","target","rel","href","breakpoint","collapsedWidth","onBreakpoint","broken","MenuUnfoldOutlined","MenuFoldOutlined","offset","label","placeholder","onSelect","value","darkVars","justify","CloseOutlined","minHeight","margin","sm","extra","onSubmit","rules","required","valuePropName","percent","getValueFromEvent","name","action","listType","htmlType","itemLayout","dataSource","renderItem","item","Meta","avatar","src","description","overlay","DownOutlined","defaultCurrent","total","count","showZero","ClockCircleOutlined","lg","marginTop","textAlign","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.55eea9e3.chunk.js","sourcesContent":["import React from 'react';\r\nimport Responsive from 'react-responsive';\r\n \r\nconst XXL = props => <Responsive {...props} minWidth={1601} />;\r\nconst XL = props => <Responsive {...props} minWidth={1200} maxWidth={1600} />;\r\nconst Desktop = props => <Responsive {...props} minWidth={992} />;\r\nconst Tablet = props => <Responsive {...props} minWidth={768} maxWidth={991} />;\r\nconst Mobile = props => <Responsive {...props} maxWidth={575} />;\r\nconst Default = props => <Responsive {...props} minWidth={576} />;\r\n\r\nexport {\r\n  XXL,\r\n  XL,\r\n  Desktop,\r\n  Tablet,\r\n  Mobile,\r\n  Default\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Layout, Menu, Drawer, Icon } from 'antd';\r\nimport { Mobile, Default } from '../Responsive';\r\n\r\nimport './index.less';\r\n\r\nconst { Header } = Layout;\r\n\r\n\r\nconst Navbar = props => {\r\n  const [visible, setVisible] = useState(false);\r\n  const menu = (\r\n    <Menu\r\n      theme=\"dark\"\r\n      mode={visible ? 'vertical': 'horizontal'}\r\n      defaultSelectedKeys={['1']}\r\n      style={{ lineHeight: '64px' }}\r\n    >\r\n      <Menu.Item key=\"1\">Home</Menu.Item>\r\n      <Menu.Item key=\"2\">About</Menu.Item>\r\n      <Menu.Item key=\"3\">Contact</Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Header className=\"app-header\">\r\n      <div className=\"logo\">Antd Live Theme</div>\r\n      <Default>{menu}</Default>\r\n      <Mobile>\r\n        <Icon type=\"bars\" size=\"large\" className=\"nav-icon\" onClick={() => setVisible(true)} />\r\n        <Drawer\r\n          title=\"\"\r\n          placement=\"right\"\r\n          closable\r\n          onClose={() => setVisible(false)}\r\n          visible={visible}\r\n          className=\"nav-drawer\"\r\n        >\r\n          <div className=\"logo\">Antd Live Theme</div>\r\n          {menu}\r\n        </Drawer>\r\n      </Mobile>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\nimport { ChromePicker, SketchPicker } from 'react-color';\n\nconst noop = () => { };\n\nconst pickers = {\n  chrome: ChromePicker,\n  sketch: SketchPicker,\n};\n\nexport default class ColorPicker extends Component {\n  static defaultProps = {\n    onChange: noop,\n    onChangeComplete: noop,\n    position: 'bottom',\n  }\n\n  constructor(props) {\n    super();\n    this.state = {\n      displayColorPicker: false,\n      color: props.color,\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({ color: nextProps.color });\n  }\n  handleClick = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\n  };\n  handleClose = () => {\n    this.setState({ displayColorPicker: false });\n  };\n  handleChange = (color) => {\n    this.setState({ color: color.hex });\n    this.props.onChange(color.hex, color);\n  };\n  handleChangeComplete = (color) => {\n    this.setState({ color: color.hex });\n    this.props.onChangeComplete(color.hex);\n  };\n  render() {\n    const { small, type, position } = this.props;\n\n    const Picker = pickers[type];\n\n    const styles = {\n      color: {\n        width: small ? '16px' : '120px',\n        height: small ? '16px' : '24px',\n        borderRadius: '2px',\n        background: this.state.color,\n      },\n      swatch: {\n        padding: '4px',\n        background: '#fff',\n        borderRadius: '2px',\n        boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n        display: 'inline-block',\n        cursor: 'pointer',\n      },\n      popover: {\n        position: 'absolute',\n        zIndex: '2',\n      },\n      cover: {\n        position: 'fixed',\n        top: '0px',\n        right: '0px',\n        bottom: '0px',\n        left: '0px',\n      },\n      wrapper: {\n        position: 'inherit',\n        zIndex: '100',\n      },\n    };\n\n    if (position === 'top') {\n      styles.wrapper.transform = 'translateY(-100%)';\n      styles.wrapper.paddingBottom = 8;\n    }\n\n    const swatch = (\n      <div style={styles.swatch} onClick={this.handleClick}>\n        <div style={styles.color} />\n      </div>\n    );\n    const picker = this.state.displayColorPicker ? (\n      <div style={styles.popover}>\n        <div style={styles.cover} onClick={this.handleClose} />\n        <div style={styles.wrapper}>\n          <Picker\n            {...this.props}\n            color={this.state.color}\n            onChange={this.handleChange}\n            onChangeComplete={this.handleChangeComplete}\n          />\n        </div>\n      </div>\n    ) : null;\n\n    if (position === 'top') {\n      return <div>{picker}{swatch}</div>;\n    }\n    return <div>{swatch}{picker}</div>;\n  }\n}\n","import React, { Component } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Breadcrumb,\r\n  Menu,\r\n  Layout,\r\n  Form,\r\n  Select,\r\n  Switch,\r\n  Radio,\r\n  Card,\r\n  message,\r\n  Button,\r\n  Upload,\r\n  DatePicker,\r\n  Progress,\r\n  Dropdown,\r\n  Pagination,\r\n  Checkbox,\r\n  Badge,\r\n  List,\r\n  Timeline,\r\n  Avatar\r\n} from \"antd\";\r\n\r\nimport {\r\n  ClockCircleOutlined, DownOutlined, MenuFoldOutlined, MenuUnfoldOutlined, CloseOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport Navbar from './Navbar';\r\nimport ColorPicker from \"./ColorPicker\";\r\nimport darkVars from './dark.json';\r\nimport lightVars from './light.json';\r\nimport './styles/main.less';\r\n\r\nconst { Footer, Content, Sider } = Layout;\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst RadioButton = Radio.Button;\r\nconst RadioGroup = Radio.Group;\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let initialValue = lightVars;\r\n    let vars = {};\r\n\r\n    try {\r\n      vars = localStorage.getItem(\"app-theme\");\r\n      if (!vars) {\r\n        vars = initialValue;\r\n      } else {\r\n        vars = Object.assign(\r\n          {},\r\n          JSON.parse(vars)\r\n        );\r\n      }\r\n\r\n    } catch (e) {\r\n      vars = initialValue;\r\n    } finally {\r\n      this.state = { vars, initialValue };\r\n      window.less\r\n        .modifyVars(vars)\r\n        .then(() => { })\r\n        .catch(error => {\r\n          message.error(`Failed to update theme`);\r\n        });\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log(\"Received values of form: \", values);\r\n      }\r\n    });\r\n  };\r\n  normFile = e => {\r\n    console.log(\"Upload event:\", e);\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    return e && e.fileList;\r\n  };\r\n  onChangeComplete = (varName, color) => {\r\n    const { vars } = this.state;\r\n    vars[varName] = color;\r\n    this.setState({ vars: { ...vars } });\r\n  };\r\n  handleColorChange = (varname, color) => {\r\n    const vars = { ...this.state.vars };\r\n    if (varname) vars[varname] = color;\r\n    console.log(vars);\r\n    window.less\r\n      .modifyVars(vars)\r\n      .then(() => {\r\n        // message.success(`Theme updated successfully`);\r\n        this.setState({ vars });\r\n        localStorage.setItem(\"app-theme\", JSON.stringify(vars));\r\n      })\r\n      .catch(error => {\r\n        message.error(`Failed to update theme`);\r\n      });\r\n  };\r\n\r\n  getColorPicker = (varName, position) => (\r\n    <Row className=\"color-row\" key={`${varName}-${this.state.vars[varName]}`}>\r\n      <Col xs={4} className=\"color-palette\">\r\n        <ColorPicker\r\n          type=\"sketch\"\r\n          small\r\n          color={this.state.vars[varName]}\r\n          position={position || 'right'}\r\n          presetColors={[\r\n            '#F5222D',\r\n            '#FA541C',\r\n            '#FA8C16',\r\n            '#FAAD14',\r\n            '#FADB14',\r\n            '#A0D911',\r\n            '#52C41A',\r\n            '#13C2C2',\r\n            '#1890FF',\r\n            '#2F54EB',\r\n            '#722ED1',\r\n            '#EB2F96'\r\n          ]}\r\n          onChangeComplete={color => this.handleColorChange(varName, color)}\r\n        />\r\n      </Col>\r\n      <Col className=\"color-name\" xs={20}>{varName}</Col>\r\n    </Row>\r\n  );\r\n  resetTheme = () => {\r\n    localStorage.setItem(\"app-theme\", \"{}\");\r\n    this.setState({ vars: this.state.initialValue });\r\n    window.less.modifyVars(this.state.initialValue).catch(error => {\r\n      message.error(`Failed to reset theme`);\r\n    });\r\n  };\r\n\r\n  onCollapse = collapsed => {\r\n    this.setState({ collapsed });\r\n    console.log('onCollapse', collapsed);\r\n  }\r\n\r\n  render() {\r\n    const { collapsed } = this.state;\r\n    const colorPickerOptions = [\"@primary-color\", \"@secondary-color\", \"@text-color\", \"@text-color-secondary\", \"@heading-color\", \"@layout-header-background\", \"@btn-primary-bg\"];\r\n    // const colorPickers = Object.keys(this.state.vars).filter(name => colorPickerOptions.indexOf(name) > -1).map((varName, index) =>\r\n    const colorPickers = colorPickerOptions.map((varName, index) =>\r\n      this.getColorPicker(varName, index > 3 ? 'top' : 'right')\r\n    );\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 18 }\r\n    };\r\n\r\n    const themeLayout = {\r\n      labelCol: { span: 24 },\r\n      wrapperCol: { span: 24 }\r\n    }\r\n\r\n    const listData = [\r\n      {\r\n        title: \"Ant Design Title 1\"\r\n      },\r\n      {\r\n        title: \"Ant Design Title 2\"\r\n      },\r\n      {\r\n        title: \"Ant Design Title 3\"\r\n      },\r\n      {\r\n        title: \"Ant Design Title 4\"\r\n      }\r\n    ];\r\n\r\n    const menu = (\r\n      <Menu>\r\n        <Menu.Item>\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"http://www.alipay.com/\"\r\n          >\r\n            1st menu item\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"http://www.taobao.com/\"\r\n          >\r\n            2nd menu item\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"http://www.tmall.com/\"\r\n          >\r\n            3rd menu item\r\n          </a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n    return (\r\n      <Layout className=\"app\">\r\n        <Navbar />\r\n        <Content className=\"content\">\r\n          <Layout>\r\n            <Sider\r\n              theme=\"light\"\r\n              breakpoint=\"lg\"\r\n              collapsedWidth={40}\r\n              collapsed={collapsed}\r\n              width={300}\r\n              onBreakpoint={broken => {\r\n                console.log(broken);\r\n                this.onCollapse(broken);\r\n              }}\r\n              onCollapse={this.onCollapse}\r\n            >\r\n              <Row className=\"theme-heading\">\r\n                {collapsed ? <MenuUnfoldOutlined onClick={() => this.onCollapse(!collapsed)} /> : <MenuFoldOutlined onClick={() => this.onCollapse(!collapsed)} />}\r\n              </Row>\r\n              <Row className=\"theme-selector-dropdown\">\r\n                {!collapsed && (\r\n                  <Col span={22} offset={1}><FormItem\r\n                    {...themeLayout}\r\n                    label=\"Choose Theme\"\r\n                    className=\"ant-col ant-col-xs-22 ant-col-offset-1\"\r\n                  >\r\n\r\n                    <Select\r\n                      placeholder=\"Please select theme\"\r\n                      onSelect={value => {\r\n                        let vars = value === 'light' ? lightVars : darkVars;\r\n                        vars = { ...vars, '@white': '#fff', '@black': '#000' };\r\n                        if (value === 'light') {\r\n                          vars['@select-item-selected-option-color'] = vars['@text-color'];\r\n                        } else {\r\n                          vars['@select-item-selected-option-color'] = vars['@primary-color'];\r\n                        }\r\n                        this.setState({ vars });\r\n                        window.less.modifyVars(vars).catch(error => {\r\n                          message.error(`Failed to reset theme`);\r\n                          this.setState({ vars });\r\n                          localStorage.setItem(\"app-theme\", JSON.stringify(vars));\r\n                        });\r\n                      }}\r\n                    >\r\n                      <Option value=\"light\">Light</Option>\r\n                      <Option value=\"dark\">Dark</Option>\r\n                    </Select>\r\n                  </FormItem>\r\n                  </Col>\r\n                )}\r\n              </Row>\r\n\r\n              {colorPickers}\r\n              <Row type=\"flex\" justify=\"center\">\r\n                <Button type=\"primary\" onClick={this.resetTheme} title=\"Reset Theme\">\r\n                  {!collapsed ? \"Reset Theme\" : <CloseOutlined />}\r\n                </Button>\r\n              </Row>\r\n              \r\n            </Sider>\r\n            <Content style={{ padding: '0 24px', minHeight: 280 }}>\r\n              <Breadcrumb style={{ margin: '16px 0' }}>\r\n                <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                <Breadcrumb.Item>List</Breadcrumb.Item>\r\n                <Breadcrumb.Item>App</Breadcrumb.Item>\r\n              </Breadcrumb>\r\n              <Row>\r\n                <Col xs={24} sm={6}>\r\n                  <Card\r\n                    title=\"Default size card\"\r\n                    extra={<a href=\"#\">More</a>}\r\n                    style={{ width: 300 }}\r\n                  >\r\n                    <p>Card content</p>\r\n                    <p>Card content</p>\r\n                    <p>Card content</p>\r\n                  </Card>\r\n                  <Card\r\n                    size=\"small\"\r\n                    title=\"Small size card\"\r\n                    extra={<a href=\"#\">More</a>}\r\n                    style={{ width: 300 }}\r\n                  >\r\n                    <p>Card content</p>\r\n                    <p>Card content</p>\r\n                    <p>Card content</p>\r\n                  </Card>\r\n                </Col>\r\n                <Col xs={24} sm={{ span: 15, offset: 3 }}>\r\n                  <Form onSubmit={this.handleSubmit}>\r\n                    <Col xs={24} sm={12}>\r\n                      <FormItem\r\n                        {...formItemLayout}\r\n                        label=\"Select[multiple]\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message:\r\n                              \"Please select your favourite colors!\",\r\n                            type: \"array\"\r\n                          }\r\n                        ]}\r\n                      >\r\n                        <Select\r\n                          mode=\"multiple\"\r\n                          placeholder=\"Please select favourite colors\"\r\n                        >\r\n                          <Option value=\"red\">Red</Option>\r\n                          <Option value=\"green\">Green</Option>\r\n                          <Option value=\"blue\">Blue</Option>\r\n                        </Select>\r\n                      </FormItem>\r\n\r\n                      <FormItem {...formItemLayout} label=\"Switch\" valuePropName=\"checked\">\r\n                        <Switch />\r\n                      </FormItem>\r\n\r\n                      <FormItem {...formItemLayout} label=\"Radio.Group\">\r\n                        <RadioGroup>\r\n                          <Radio value={1}>A</Radio>\r\n                          <Radio value={2}>B</Radio>\r\n                          <Radio value={3}>C</Radio>\r\n                          <Radio value={4}>D</Radio>\r\n                        </RadioGroup>\r\n                      </FormItem>\r\n\r\n                      <FormItem {...formItemLayout} label=\"Radio.Button\">\r\n                        <RadioGroup>\r\n                          <RadioButton value=\"a\">item 1</RadioButton>\r\n                          <RadioButton value=\"b\">item 2</RadioButton>\r\n                          <RadioButton value=\"c\">item 3</RadioButton>\r\n                        </RadioGroup>\r\n                      </FormItem>\r\n                      <Progress percent={60} />\r\n                    </Col>\r\n                    <Col xs={24} sm={12}>\r\n                      <FormItem {...formItemLayout} label=\"Date\">\r\n                        <DatePicker />\r\n                      </FormItem>\r\n                      <FormItem {...formItemLayout} label=\"Upload\" valuePropName=\"fileList\" getValueFromEvent={this.normFile}>\r\n                        <Upload\r\n                          name=\"logo\"\r\n                          action=\"/upload.do\"\r\n                          listType=\"picture\"\r\n                        >\r\n                          <Button>\r\n                            <Upload /> Click to upload\r\n                                </Button>\r\n                        </Upload>\r\n                      </FormItem>\r\n                      <FormItem wrapperCol={{ span: 12, offset: 6 }}>\r\n                        <Button type=\"default\">Cancel</Button>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                          Submit\r\n                            </Button>\r\n                      </FormItem>\r\n\r\n\r\n\r\n                    </Col>\r\n                  </Form>\r\n                </Col>\r\n              </Row>\r\n              <Row\r\n                type=\"flex\"\r\n                justify=\"left\"\r\n                className=\"secondary-color\"\r\n              >\r\n                <Col xs={24} sm={6}>\r\n                  <Row\r\n                    type=\"flex\"\r\n                    justify=\"left\"\r\n                    className=\"secondary-color\"\r\n                  >\r\n                    <List\r\n                      itemLayout=\"horizontal\"\r\n                      dataSource={listData}\r\n                      renderItem={item => (\r\n                        <List.Item>\r\n                          <List.Item.Meta\r\n                            avatar={\r\n                              <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                            }\r\n                            title={\r\n                              <a href=\"https://ant.design\">\r\n                                {item.title}\r\n                              </a>\r\n                            }\r\n                            description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\r\n                          />\r\n                        </List.Item>\r\n                      )}\r\n                    />\r\n                  </Row>\r\n                </Col>\r\n                <Col xs={24} sm={6}>\r\n                  <Row\r\n                    type=\"flex\"\r\n                    justify=\"left\"\r\n                    className=\"secondary-color component-container\"\r\n                  >\r\n                    <Dropdown overlay={menu}>\r\n                      <a className=\"ant-dropdown-link\" href=\"#\">\r\n                        Hover me <DownOutlined />\r\n                      </a>\r\n                    </Dropdown>\r\n                  </Row>\r\n                  <Row\r\n                    type=\"flex\"\r\n                    justify=\"left\"\r\n                    className=\"secondary-color component-container\"\r\n                  >\r\n                    <Pagination defaultCurrent={1} total={50} />\r\n                  </Row>\r\n                  <Row\r\n                    type=\"flex\"\r\n                    justify=\"left\"\r\n                    className=\"secondary-color component-container\"\r\n                  >\r\n                    <Checkbox>Checkbox</Checkbox>\r\n                  </Row>\r\n                </Col>\r\n                <Col xs={24} sm={6}>\r\n                  <Row\r\n                    type=\"flex\"\r\n                    justify=\"left\"\r\n                    className=\"secondary-color\"\r\n                  >\r\n                    <div>\r\n                      <Badge count={5}>\r\n                        <a href=\"#\" className=\"head-example\" />\r\n                      </Badge>\r\n                      <Badge count={0} showZero>\r\n                        <a href=\"#\" className=\"head-example\" />\r\n                      </Badge>\r\n                      <Badge\r\n                        count={\r\n                          <ClockCircleOutlined\r\n                            style={{ color: \"#f5222d\" }}\r\n                          />\r\n                        }\r\n                      >\r\n                        <a href=\"#\" className=\"head-example\" />\r\n                      </Badge>\r\n                    </div>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={24} lg={{ span: 9, offset: 3 }} style={{ marginTop: 15 }}>\r\n                  <Timeline>\r\n                    <Timeline.Item>Create a services site 2015-09-01</Timeline.Item>\r\n                    <Timeline.Item>Solve initial network problems 2015-09-01</Timeline.Item>\r\n                    <Timeline.Item>Technical testing 2015-09-01</Timeline.Item>\r\n                    <Timeline.Item>Network problems being solved 2015-09-01</Timeline.Item>\r\n                  </Timeline>\r\n                </Col>\r\n                <Col xs={24} lg={{ span: 12 }} style={{ marginTop: 15 }}>\r\n                  <Timeline>\r\n                    <Timeline.Item>Create a services site 2015-09-01</Timeline.Item>\r\n                    <Timeline.Item>Solve initial network problems 2015-09-01</Timeline.Item>\r\n                    <Timeline.Item>Technical testing 2015-09-01</Timeline.Item>\r\n                    <Timeline.Item>Network problems being solved 2015-09-01</Timeline.Item>\r\n                  </Timeline>\r\n                </Col>\r\n              </Row>\r\n            </Content>\r\n          </Layout>\r\n        </Content>\r\n        <Footer style={{ textAlign: 'center' }}>\r\n          Ant Design Live Theme ©2018 Created by Zohaib Ijaz (mzohaibqc)\r\n        </Footer>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}